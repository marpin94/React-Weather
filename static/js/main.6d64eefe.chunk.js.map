{"version":3,"sources":["styles/WeatherCard.module.css","components/WeatherImg.js","components/WeatherCards.js","components/SearchBar.js","components/Nav.js","App.js","index.js","styles/SearchBar.module.css","styles/Home.module.css"],"names":["module","exports","WeatherImg","props","icon","WeatherCards","temp","city","description","state","country","faren","useState","weatherKey","setWeatherKey","temp_f","Math","round","weatherImgObj","clouds","haze","clear","snow","rain","useEffect","keys","Object","values","lower","toLowerCase","i","length","includes","renderWeatherImg","className","styles","weatherIcon","SearchBar","setCity","searchResults","setSearchResults","load","setLoad","key","process","REACT_APP_API_KEY","e","a","preventDefault","alert","fetch","then","res","json","data","catch","error","console","log","undefined","apiData","city_name","weather","state_code","country_code","container","autoComplete","type","placeholder","id","value","onChange","target","class","searchBtn","onClick","Nav","App","setFaren","farenBtn","require","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d64eefe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherIcon\":\"WeatherCard_weatherIcon__3R2Lo\"};","import React from 'react'\r\nimport ReactAnimatedWeather from 'react-animated-weather'\r\n\r\nexport const WeatherImg = (props) => {\r\n   \r\n    return (\r\n        <div>\r\n            <ReactAnimatedWeather  icon={props.icon}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { WeatherImg } from './WeatherImg';\r\n\r\nimport styles from '../styles/WeatherCard.module.css'\r\n\r\n\r\n\r\nexport const WeatherCards = ({temp, city, description, state, country, faren}) => {\r\n\r\n\r\n    const [weatherKey, setWeatherKey] = useState('')\r\n    \r\n    var temp_f = Math.round((temp * 9/5) +32);\r\n    \r\n\r\n    let weatherImgObj = {\r\n        clouds: 'CLOUDY',\r\n        haze: 'CLOUDY',\r\n        clear: 'CLEAR_DAY',\r\n        snow: 'SNOW',\r\n        rain: 'RAIN'\r\n    }\r\n\r\n    const renderWeatherImg = () => {\r\n        if(description) {\r\n            setWeatherKey('')\r\n            const keys = Object.keys(weatherImgObj)\r\n            const values = Object.values(weatherImgObj)\r\n            const lower = description.toLowerCase()\r\n            for (let i = 0; i < keys.length; i++){\r\n                if(lower.includes(keys[i])){\r\n                   setWeatherKey(values[i])                  \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n   useEffect(() => {\r\n        renderWeatherImg();\r\n      \r\n   })\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 className='text-center'> Current Weather </h2>\r\n            <hr/>\r\n            <div className='shadow card text-center border border-info'>\r\n            <div className={styles.weatherIcon}> {weatherKey && <WeatherImg icon={weatherKey}/>}  </div> \r\n                <div className='card-body'>\r\n                    {city && <h2 className='card-title'>{city}{country === 'US'? `,${state}`:''}</h2>}    \r\n                    {country && <h4 className='card-text'>{country}</h4>}\r\n                    {temp && <p className='card-text'>Temperature: {faren? `${temp_f} F`:`${temp} C`}</p>}\r\n                    {description && <p className='card-text'> {description} </p>}  \r\n                </div>\r\n        \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// import { Dropdown } from 'bootstrap'\r\nimport React, { useState } from 'react'\r\nimport { WeatherCards } from './WeatherCards'\r\n\r\nimport styles from '../styles/SearchBar.module.css'\r\n\r\n\r\nexport const SearchBar = ({faren}) => {\r\n\r\n    const [city, setCity] = useState('')\r\n\r\n    const [searchResults, setSearchResults] = useState([])\r\n    const [load, setLoad] = useState(false)\r\n    \r\n    const key = process.env.REACT_APP_API_KEY\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        if(city === '') {\r\n            return(\r\n                alert('Please enter a city')\r\n            )\r\n        } else {\r\n        const apiData = await fetch(`https://api.weatherbit.io/v2.0/current?city=${city}&key=${key}`)\r\n        .then(res => res.json())\r\n        .then(data => data)\r\n    \r\n                \r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n\r\n        if (apiData === undefined) {\r\n            setCity('')\r\n            return(\r\n                alert('City Not Found, Please Try Again')\r\n            )\r\n            \r\n        } else { \r\n            setSearchResults({\r\n                data:apiData.data[0],\r\n                temp:apiData.data[0].temp,\r\n                city:apiData.data[0].city_name,\r\n                description: apiData.data[0].weather.description,\r\n                state: apiData.data[0].state_code,\r\n                country: apiData.data[0].country_code               \r\n            })\r\n\r\n        }\r\n            setLoad(true)\r\n            setCity('')\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n    <div className={styles.container}>\r\n        <form autoComplete='off'>\r\n            <div className='form-group'>\r\n                <input \r\n                    type='text' \r\n                    className='form-control' \r\n                    placeholder='Enter Search Terms...' \r\n                    id='cityInput' \r\n                    value={city} \r\n                    onChange={(e)=>setCity(e.target.value) } \r\n                    />\r\n                <small id=\"passwordHelpBlock\" class=\"form-text text-muted\">\r\n                For best results enter City,State,Country e.g. Seattle, WA, USA\r\n                </small>\r\n            </div>\r\n            <button className={styles.searchBtn} onClick = {handleSubmit}>Search</button> \r\n        </form>\r\n        <div>\r\n            {load && <WeatherCards \r\n            temp={searchResults.temp} \r\n            city={searchResults.city} \r\n            description={searchResults.description}\r\n            state = {searchResults.state} \r\n            country = {searchResults.country}\r\n            faren={faren} />}\r\n            <br/>  \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Nav = () => {\r\n    return (\r\n        <div className='navbar navbar-dark bg-dark '>\r\n            <h2 className='text-white'>React Weather</h2>    \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { SearchBar } from './components/SearchBar'\r\nimport {Nav} from './components/Nav'\r\n\r\nimport styles from './styles/Home.module.css'\r\nimport './style.css'\r\n\r\n\r\nconst App = () => {\r\n \r\n  const [faren, setFaren] = useState(false)\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault()\r\n    setFaren(!faren)\r\n  }\r\n\r\n  return(\r\n    <div className={styles.container}>\r\n      <Nav />\r\n      <button type=\"button\" className={styles.farenBtn} onClick={handleClick} > Toggle C/F </button> \r\n      <div className='container'>\r\n        <SearchBar faren={faren}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App'\r\nrequire('dotenv').config();\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchBar_container__jE56a\",\"searchBtn\":\"SearchBar_searchBtn__aOjEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"farenBtn\":\"Home_farenBtn__301qr\"};"],"sourceRoot":""}